# 1. print()를 이용해 ‘Hello Rabbit!’을 출력하세요.
from itertools import count

print("Hello Rabbit!") #
print("---------------------------------------------------------------------------------------------------------------")
# 2. 아래 처럼 결과가 출력되게 작성하세요.
# my_sum = 9 my_sub = 3 my_mul = 18 my_div = 2.0
x = 6
y = 3
# 더하기 연산
my_sum = x + y
print('my_sum :', my_sum) #6+3
# 빼기 연산
my_sub = x - y
print('my_sub :', my_sub) #6-3
# 곱하기 연산
my_mul = x * y
print('my_mul :', my_mul) #6*3
# 나누기 연산
my_div = x / y
print('my_div :', my_div) #6/3
print("---------------------------------------------------------------------------------------------------------------")
# 3. count는 10부터 시작하세요.
# 일단 count를 출력하세요.
# count를 1만큼 감소시키세요.
# 2번과 3번을 10번 반복하세요.
count = 10 #
for i in range(count,0,-1): # 10부터 1까지 1씩 감소하여 반복
    print(i) # 현재 count 값 출력
print("---------------------------------------------------------------------------------------------------------------")
# 4. 안녕 나는 엘리스야라는 문자열을 입력시 그 길이만큼 “개굴”을 출력하도록 하세요.
# 단, 공백은 그대로 유지되어야 하며 줄바꿈 없이 출력하세요.
s = input("문자열을 입력하세요: ") # 문자열 입력받기
result = [] #출력할 값을 담을 리스트
for ch in s: #입력받은 문자열을 한 글자씩 순회
    if ch == ' ': #공백이면
        result.append(' ') #공백 그대로 추가
    else: #글자이면
        result.append('개굴') #'개굴' 추가
print(''.join(result)) #리스트의 내용을 문자열로 합쳐 출력
print("---------------------------------------------------------------------------------------------------------------")
# 5. 발판의 숫자들이 담긴 배열 steps가 주어졌을 때
# 토끼가 뛰어야 할 횟수를 반환하는 함수 crossBridge()의 빈칸을 채워 함수를 완성해봅시다.
def crossBridge(steps):
    cnt = 0 #점프 횟수 카운트
    current = 0 #현재 위치;
    n = len(steps) #발판 개수
    while current < n: #마지막 발판에 도달하기 전까지 반복
        current += steps[current] #현재 발판 숫자만큼 앞으로 점프
        cnt += 1 #점프 횟수 증가
    return cnt #최종 점프 횟수 반환
print(crossBridge([1, 1, 2, 3, 5])) # 예시 실행
print("---------------------------------------------------------------------------------------------------------------")
# 6. frogList에 담긴 문자열 중 ‘F’로 시작하는 값을 return 하는 isPrince 함수를 동작하도록 작성하기
def isPrince(frogList):
    for name in frogList: #리스트의 각 이름을 확인
        if name.startswith('F'): #"F"로 시작하면
            return name #해당 이름 반환
print(isPrince(['Alice', 'Bob', 'Frog'])) # 'Frog' 반환
print("---------------------------------------------------------------------------------------------------------------")
# 7. 토끼의 휴식시간 N과 거북이의 휴식시간 M이 인자로 주어졌을때, 토끼와 거북이가 동시에 휴식하는 최초의 시간을 출력하는 프로그램을 작성해봅시다.

print("---------------------------------------------------------------------------------------------------------------")
# 8. 주어진 조건(별의 거리)에 따라 달라지는 별을 출력해 봅시다.
# 별의 거리 i가 입력으로 주어질 때, 별 사이의 거리가 i인 W모양의 대칭인 별자리를 출력하세요.
# 단, 별의 거리 i가 짝수이면 두 번째 행의 별 사이의 거리는 i-1입니다

print("---------------------------------------------------------------------------------------------------------------")
# 9.

# 10. 

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#